version: "3.7"

services:
    webapp:
        build:
            context: .
            dockerfile: Dockerfile
        working_dir: /var/www/html
        restart: always
        environment:
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_DATABASE}
        ports:
            - 8002:80
        volumes:
            - .:/var/www/html
        depends_on:
            - db
        networks:
            - app

    db:
        image: mysql:8.0.34
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./mysql:/var/lib/mysql
        ports:
            - 3302:3306
        networks:
            - app
    redis:
        image: redis:latest
        container_name: redis
        restart: always
        ports:
            - "6302:6379"
        networks:
            - app
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
        environment:
            - discovery.type=single-node
        ports:
            - "9201:9201"

    fluentd:
        image: fluent/fluentd:v1.14-1
        environment:
            - FLUENTD_CONF=fluentd.conf
        volumes:
            - ./fluentd.conf:/fluentd/etc/fluentd.conf
        ports:
            - "24224:24224"

    kibana:
        image: docker.elastic.co/kibana/kibana:7.9.3
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        ports:
            - "5601:5601"
volumes:
    esdata:
        driver: local

networks:
    app:
        driver: bridge
